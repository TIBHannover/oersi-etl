# Moochub specific filter to kick out all resources that are not free

unless any_match("attributes.access[].","free")
  reject()
end

# Delete all empty values
vacuum()

# Include general macros and general and specific maps for reuse
do once("macrosAndMaps")
  include ("../../sharedFixes/macros.fix")
  include ("../../sharedFixes/maps.fix")
  # Add here workflow specific maps
  put_filemap("data/maps/licenseSpdxUri.tsv","licenseSpdxUri","sep_char":"\t")
end


# -------------------------------------------
# Reuse edu-sharing default template
include ("../../sharedFixes/moocHubDefault.fix")

# Default elements: id, name, image, dateCreated, learningResourceType, inLanguage, license, type, trailer, mainEntityOfPage, context

# -------------------------------------------
# Add here provider specific transformation for elements that deviate from the default edusharing transfromation and additional ones:

#  ---------------description----------------------------------
copy_field("attributes.description", "description")
replace_all("description",'<a[^>]*?href=\\"(.*?)\\">', "")
replace_all("description","<\\w*>|</\\w*>", "")


#  ---------------creator----------------------------------

# ------ sourceOrganization ------
# source data is not consistent, can be a single author or multiple separated by comma or "&amp;". API estimates one object per instructor. Also there is no type even though there are persons and organisations.*/

do list(path: "attributes.creator[]", "var":"$i") # Only TU LÃ¼beck is creator but the real creator is given as instructor
  copy_field("$i.name","sourceOrganization[].$append.name")
  copy_field("$i.type","sourceOrganization[].$last.type")
end

do list(path: "attributes.instructor[]", "var":"$i")
  unless any_match("$i.name","null| *")
    call_macro("deleteAcademicTitles", field: "$i.name")
    copy_field("$i.name","creator[].$append.name")
    copy_field("$i.type","creator[].$last.type") # Sometimes there is a Person type given for organisations
  end
end




# -------------conditionsOfAccess--------------
add_field("conditionsOfAccess.id","http://w3id.org/kim/conditionsOfAccess/login")

# ---license cleanup ---

lookup("license.id","licenseSpdxUri")

# --- keyword cleanup---

if any_match("keywords[]", ".*,.*,.*")
  split_field("keywords[].1",",")
  flatten("keywords[]")
end

# ------ tidy up --- 
include ("../../sharedFixes/cleanUp.fix")

# missing:
