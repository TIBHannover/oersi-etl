# Filter out all resources that are not free

unless any_match("attributes.access[].","free")
  reject()
end

# Delete all empty values
vacuum()

include ("../../sharedFixes/macros.fix")

#  ---------------id----------------------------------
remove_field("id")
copy_field("attributes.url", "id")

#  ---------------name----------------------------------
copy_field("attributes.name", "name")

#  ---------------image----------------------------------
copy_field("attributes.image.url", "image")

#  ---------------dateCreated----------------------------------
copy_field("attributes.startDate", "dateCreated")
replace_all("dateCreated", "T.*", "")

#  ---------------description----------------------------------
paste("description", "attributes.description","attributes.learningobjectives[].*")


# /* creator: source data is not consistent, can be a single author or multiple separated by comma or "&amp;". API estimates one object per instructor. Also there is no type even though there are persons and organisations.*/
# do map("attributes.instructors[].*.name", "@creator")
#  split(delimiter: ", | &amp; ")
#  replace(pattern: "Apl\\. |\\(apl\\.\\) |Dr\\. med |Dr\\. |Dr\\.'in |Dr |Dr\\.med\\.|Dres\\. |Dr\\.|Prof\\. |Prof\\.'in |Prof\\.|Prof |Jun\\.-|PD |PD\\. |med\\. |rer\\. |pol\\.|nat\\. |dent\\. |em\\. |Ao\\.-|o\\. Univ\\.|Uni\\.-|Univ\\.-|Univ\\. |DI |RA |Dipl\\.|-Ing\\. |-Inform\\. |-Psych\\. |h\\.c\\. |mult\\. |Mag\\. |, MME|; MME|, MScN|M\\. Sc\\. |, MSc| MSc\\.|, M\\.A\\.| M\\.A\\.|, M\\.D\\.|, B\\.A\\.|, MMZ|, Psychoanalytiker|, L\\.L\\.M\\.|, LL\\.M\\.| \\(M\\.A\\.\\)", with: "")
#  not_equals(string: '')
# end

#  ---------------creator----------------------------------
# source data is not consistent, can be a single author or multiple separated by comma or "&amp;". API estimates one object per instructor. Also there is no type even though there are persons and organisations.*/
set_array("@creator")
do list(path: "attributes.instructors[]", "var":"$i")
  split_field("$i.name", ", | &amp; | / ")
  do list(path:"$i.name", "var":"$j")
    copy_field("$j", "@creator.$append")
  end
end
trim("@creator.*")
call_macro("deleteAcademicTitles", field: "@creator.*")


set_array("creator[]")
do list(path:"@creator", "var": "$i")
  copy_field("$i","creator[].$append.name")
  add_field("creator[].$last.type", "Person")
end

# ------ sourceOrganization --- 
set_array("sourceOrganization[]")
do list(path:"attributes.partnerInstitute[]", "var": "$i")
  copy_field("$i.name", "sourceOrganization[].$append.name")
  add_field("sourceOrganization[].$last.type", "Organization")
end

# ------ learningResourceType --- 
add_field("@hcrt","https://w3id.org/kim/hcrt/course")
# only course

set_array("learningResourceType[]")
add_field("learningResourceType[].$append.id","https://w3id.org/kim/hcrt/course")
add_field("learningResourceType[].$last.prefLabel.de","Kurs")
add_field("learningResourceType[].$last.prefLabel.en","Course")

# ------ inLanguage --- 
/* inLanguage: The value Mehrsprachig does not represent the estimated language labels. */
set_array("inLanguage[]")
copy_field("attributes.languages[].*", "inLanguage[].$append")

do list(path:"inLanguage[]","var":"$i")
  if any_equal("$i", "Mehrsprachig")
    remove_field("$i")
  end
end

# ------ license ---
copy_field("attributes.courseLicenses[].*.url","license.id")

# ------ type --- 

set_array("type[]", "LearningResource")

# ---------mainEntityOfPage----------------

set_array("mainEntityOfPage[]")
copy_field("id", "mainEntityOfPage[].$append.id")
add_field("mainEntityOfPage[].$last.provider.id","$[service_id]")
add_field("mainEntityOfPage[].$last.provider.type","Service")
add_field("mainEntityOfPage[].$last.provider.name","$[service_name]")

# ---------------conditionsOfAccess----------------------------------
add_field("conditionsOfAccess.id","http://w3id.org/kim/conditionsOfAccess/login")

# ---------------@context ----------------------------------

set_array("@context[]", "https://w3id.org/kim/amb/draft/context.jsonld")
# resource is german therefore prefer de if multiple or no inLanguage are available
if any_equal("inLanguage[]","de")
  set_hash("@context[].$append", "@language": "de")
elsif any_equal("inLanguage[]","en")
  set_hash("@context[].$append", "@language": "en")
else
  copy_field("inLanguage[].1", "@context[].$append.@language")
end
# resources without inLanguage-Values set default to de
unless exists("inLanguage[].1")
  set_hash("@context[].$append", "@language": "de")
end


# ------ tidy up --- 
include ("../../sharedFixes/shared.fix")
vacuum()

/*missing:*/
/*kewords*/
/*about*/