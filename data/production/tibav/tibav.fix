if exists ("metadata.error")
  reject()
end

if any_equal ("header.status", "deleted")
  reject()
end


vacuum()


# ---------------id----------------------------------
# id: Construct actual ID from @id. Picked from header not from record itself.

copy_field("header.identifier.value","id")
replace_all("id", "oai:tib.eu:kmo-av:sid~", "https://av.tib.eu/media/")


# ---------------name----------------------------------
# The json-validator created an error due to duplicated element "name". Therefore the two conditionals should prevent a duplicate elemente.

unless exists("name")
  do list(path:"metadata.resources.resource.titles.title", "var": "$i")
    unless exists("$i.titleType")
      copy_field("$i.value", "name")
    end
  end
end

# ---------------image----------------------------------

copy_field("header.identifier.value","image")
replace_all("image", "oai:tib.eu:kmo-av:sid~", "https://av.tib.eu/thumbnail/")


# ---------------dateCreated----------------------------------

do list(path:"metadata.resources.resource.dates.date","var":"$i")
  if any_equal("$i.dateType", "Issued")
    copy_field("$i.value","dateCreated")
  end
end


# ---------------description----------------------------------

do list(path:"metadata.resources.resource.descriptions.description","var":"$i")
  if any_equal("$i.descriptionType", "Abstract")
    copy_field("$i.value","description")
  end
end
replace_all("description", "^\\(de\\)|^\\(en\\)", "")

# ---------------license----------------------------------

unless any_equal("metadata.resources.resource.rightsList.rights.rightsURI", "http://rightsstatements.org/vocab/InC/1.0/")
  copy_field("metadata.resources.resource.rightsList.rights.rightsURI","license.id")
end

# ------ type --- 

set_array("type[]", "LearningResource")

# ------ learningResourceType --- 
# only video

set_array("learningResourceType[]")
add_field("learningResourceType[].$append.id","https://w3id.org/kim/hcrt/video")
add_field("learningResourceType[].$last.prefLabel.de","Video")
add_field("learningResourceType[].$last.prefLabel.en","Video")


# ------ encoding --- 

set_array("encoding[]")
copy_field("header.identifier.value","encoding[].$append.embedUrl")
add_field("encoding[].$last.type", "MediaObject")
replace_all("encoding[].*.embedUrl", "oai:tib.eu:kmo-av:sid~", "https://av.tib.eu/player/")


# ------ publisher --- 

set_array("publisher[]")

do list(path:"metadata.resources.resource.publisher","var":"$i")
  copy_field("$i.value","publisher[].$append.name")
  add_field("publisher[].$last.type", "Organization")
end

# ---------mainEntityOfPage----------------

set_array("mainEntityOfPage[]")
copy_field("id", "mainEntityOfPage[].$append.id")
add_field("mainEntityOfPage[].$last.provider.id","$[service_id]")
add_field("mainEntityOfPage[].$last.provider.type","Service")
add_field("mainEntityOfPage[].$last.provider.name","$[service_name]")


# ---------inLanguage----------------

set_array("inLanguage[]")
copy_field("metadata.resources.resource.language.value","inLanguage[].$append")
replace_all("inLanguage[].*", "http://id.loc.gov/vocabulary/iso639-1/", "")


# ---------creator----------------
# TIB does not differentiate between an organisation and a person.

set_array("creator[]")
do list(path:"metadata.resources.resource.creators.creator", "var":"$i")
# There might be creators with empty names that are filtered out at the beginning.
  add_field("creator[].$append.test", "")
  copy_field("$i.creatorName.value", "creator[].$last.name")
  if any_equal("$i.creatorName.nameType","Organizational")
    add_field("creator[].$last.type", "Organization")
  else
    add_field("creator[].$last.type", "Person")
  end
  do list(path:"$i.nameIdentifier", "var":"$j")
    if any_equal("$j.nameIdentifierScheme","ORCID")
      copy_field("$j.value", "creator[].$last.id")
    end
  end
end

replace_all("creator[].*.name","(.+), (.+)", "$2 $1")
prepend("creator[].*.id", "https://orcid.org/")

# ---------contributor----------------
set_array("contributor[]")
do list(path:"metadata.resources.resource.contributors.contributor", "var":"$i")
# There might be contributors with empty names that are filtered out at the beginning.
  add_field("contributor[].$append.test", "")
  copy_field("$i.contributorName.value", "contributor[].$last.name")
  if any_equal("$i.contributorName.nameType","Organizational")
    add_field("contributor[].$last.type", "Organization")
  else
    add_field("contributor[].$last.type", "Person")
  end
  do list(path:"$i.nameIdentifier", "var":"$j")
    if any_equal("$j.nameIdentifierScheme","ORCID")
      copy_field("$j.value", "contributor[].$last.id")
    end
  end
end

# contributors have functions in parenthesis these need to be deleted
replace_all("contributor[].*.name","(.+), (.+)", "$2 $1")
replace_all("contributor[].*.name","\\(.+\\)", "")
replace_all("contributor[].*.name","  ", " ")
prepend("contributor[].*.id", "https://orcid.org/")


# ---------keywords----------------

set_array("keywords[]")
do list(path:"metadata.resources.resource.subjects.subject", "var":"$i")
  copy_field("$i.value", "keywords[].$append")
end

# ---------about----------------
# All subjects with knm or linsearch attribute are transformed to about objects. Duplicate objects should be avoided. kmn and linsearch are almoist identical. 

set_array("@hochschulfaechersystematik")
do list(path:"metadata.resources.resource.subjects.subject", "var":"$i")
  if any_match("$i.subjectScheme", "linsearch.*")
    copy_field("$i.value", "@hochschulfaechersystematik.$append")
  elsif any_match("$i.subjectScheme", "knm")
    copy_field("$i.classificationCode", "@hochschulfaechersystematik.$append")
  end
end

trim("@hochschulfaechersystematik.*")
uniq("@hochschulfaechersystematik")
lookup("@hochschulfaechersystematik.*","data/maps/tibav-subject-mapping.tsv","sep_char":"\t", delete:"true")

set_array("about[]")
copy_field("@hochschulfaechersystematik.*","about[].$append.id")

do list(path: "about[]")
  copy_field("id", "prefLabel.de")
  lookup("prefLabel.de","data/maps/subject-labels.tsv","sep_char":"\t", delete:"true")
end

# ---------------conditionsOfAccess----------------------------------
add_field("conditionsOfAccess.id","http://w3id.org/kim/conditionsOfAccess/no_login")


# ---------------@context ----------------------------------

set_array("@context[]", "https://w3id.org/kim/amb/draft/context.jsonld")
# resource is german therefore prefer de if multiple or no inLanguage are available
if any_equal("inLanguage[]","de")
  set_hash("@context[].$append", "@language": "de")
elsif any_equal("inLanguage[]","en")
  set_hash("@context[].$append", "@language": "en")
else
  copy_field("inLanguage[].1", "@context[].$append.@language")
end
# resources without inLanguage-Values set default to de
unless exists("inLanguage[].1")
  set_hash("@context[].$append", "@language": "de")
end

# ------ tidy up --- 
include ("../../sharedFixes/retain.fix")
vacuum()
