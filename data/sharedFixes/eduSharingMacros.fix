#  ---------------name ----------------------------------
do put_macro("name")
  if exists("title")
    move_field("name", "@name")
    copy_field("title", "name")
  end
end

#  ---------------image----------------------------------
do put_macro("image")
  copy_field("preview.url", "image")
end

#  ---------------id----------------------------------
do put_macro("id")
  copy_field("properties.ccm:wwwurl[].1", "@external_id")
  trim("@external_id")
  replace_all("@external_id", "\\u00a0", "") /* %A0 / &nbsp; */

  copy_field("ref.id", "@internal_id")
  prepend("@internal_id","https://$[service_domain]/edu-sharing/components/render/")

  if exists("@external_id")
    copy_field("@external_id", "id")
  else
    copy_field("@internal_id", "id")
  end
end

#  ---------mainEntityOfPage----------------
do put_macro("mainEntityOfPage")
  set_array("mainEntityOfPage[]")
  copy_field("@internal_id", "mainEntityOfPage[].$append.id")
  copy_field("modifiedAt", "mainEntityOfPage[].$last.dateModified")
  copy_field("createdAt", "mainEntityOfPage[].$last.dateCreated")
  add_field("mainEntityOfPage[].$last.provider.id","$[service_id]")
  add_field("mainEntityOfPage[].$last.provider.type","Service")
  add_field("mainEntityOfPage[].$last.provider.name","$[service_name]")
end

# ---------------description----------------------------------
do put_macro("description")
  copy_field("properties.cclom:general_description[].*", "description") # eventuell nur .1 nicht .*
end


#  ---------------about----------------------------------
do put_macro("aboutDestatis")
  set_array("@hochschulfaechersystematik[]")
  copy_field("properties.ccm:taxonid[].*", "@hochschulfaechersystematik[].$append")
  filter("@hochschulfaechersystematik[]", "^https://w3id.org/kim/hochschulfaechersystematik/.*")
  
  set_array("about[]")
  do list(path:"@hochschulfaechersystematik[]", "var":"$i")
    copy_field("$i", "about[].$append.id")
    copy_field("$i", "about[].$last.prefLabel.de")
  end
  lookup("about[].*.prefLabel.de", "data/maps/subject-labels.tsv","sep_char":"\t", delete:"true")
end

#  ---------------creator----------------------------------
do put_macro("creatorTwilloStyle")
  set_array("creator[]")
  do list(path:"properties.ccm:lifecyclecontributer_author[]", "var": "$i")
    if any_match("$i", "^BEGIN:VCARD[\\s\\S]*FN:(.+)\n[\\s\\S]*\nEND:VCARD$")
      copy_field("$i", "creator[].$append.name")
      add_field("creator[].$last.type", "Person")
    elsif any_match("$i", "^BEGIN:VCARD\nORG:(.+)\n[\\s\\S]*\nEND:VCARD$")
      copy_field("$i", "creator[].$append.name")
      add_field("creator[].$last.type", "Organization")
    end
  end

  do list(path:"creator[]")
    if any_match("name", "^BEGIN:VCARD[\\s\\S]*X-ORCID:(.+)\n[\\s\\S]+END:VCARD$")
      copy_field("name", "id")
      replace_all("id","^BEGIN:VCARD[\\s\\S]*X-ORCID:(.+)\n[\\s\\S]*\nEND:VCARD$", "https://orcid.org/$1")
    end
    replace_all("name","^BEGIN:VCARD[\\s\\S]*FN:(.+)\n[\\s\\S]*\nEND:VCARD$", "$1")
    replace_all("name","^BEGIN:VCARD\nORG:(.+)\n[\\s\\S]*\nEND:VCARD$", "$1")
  end
end

#  ---------------sourceOrganization----------------------------------  
do put_macro("sourceOrganization") 
  set_array("sourceOrganization[]")
  do list(path:"properties.ccm:university_DISPLAYNAME[]", "var": "$i")
    unless any_match("$i", "null null|- Alle -")
      copy_field("$i", "sourceOrganization[].$append.name")
      add_field("sourceOrganization[].$last.type", "Organization")
    end
  end
end

#  ---------------license----------------------------------
do put_macro("license") 
  if exists("license.url")
    move_field("license.url", "license.id")
    filter("license.id","^http[s]?:\\/\\/creativecommons.org\\/(licenses|licences|publicdomain)\\/.*|^http[s]?:\\/\\/www.gnu.org\\/licenses\\/.*|^http[s]?:\\/\\/www.apache.org\\/licenses\\/.*|http[s]?://opensource.org/licenses/MIT|^http[s]?:\\/\\/www.opensource.org\\/licenses\\/BSD.*")
  else
    remove_field("license")
    copy_field("properties.virtual:licenseurl[].1", "license.id")
    filter("license.id","^http[s]?:\\/\\/creativecommons.org\\/(licenses|licences|publicdomain)\\/.*|^http[s]?:\\/\\/www.gnu.org\\/licenses\\/.*|^http[s]?:\\/\\/www.apache.org\\/licenses\\/.*|http[s]?://opensource.org/licenses/MIT|^http[s]?:\\/\\/www.opensource.org\\/licenses\\/BSD.*")  
  end
end

# ---------------conditionsOfAccess----------------------------------
do put_macro("conditionsOfAccess")
  add_field("conditionsOfAccess.id","http://w3id.org/kim/conditionsOfAccess/no_login")
end
 
# ---------------inLanguage----------------------------------
do put_macro("inLanguage")
  set_array("inLanguage[]")
  copy_field("properties.cclom:general_language[].*", "inLanguage[].$append")

  replace_all("inLanguage[].*","_..$", "") /* remove country suffixes eg. _DE */
  replace_all("inLanguage[].*","^$", "de") /* empty strings default to 'de' */
  replace_all("inLanguage[].*","unknown", "de")
end

# ---------------learningResourceType----------------------------------
do put_macro("learningResourceTypeHcrt")
  set_array("learningResourceType[]")
  do list(path:"properties.ccm:educationallearningresourcetype[]", "var": "$i")
    unless any_equal("$i", "null null")
      copy_field("$i", "learningResourceType[].$append.id")
      copy_field("$i", "learningResourceType[].$last.prefLabel.de")
      copy_field("$i", "learningResourceType[].$last.prefLabel.en")
    end
  end
  
  lookup("learningResourceType[].*.prefLabel.de", "data/maps/hcrt-de-labels.tsv","sep_char":"\t", delete:"true")
  lookup("learningResourceType[].*.prefLabel.en", "data/maps/hcrt-en-labels.tsv","sep_char":"\t", delete:"true")
end

#  ---------------keywords----------------------------------
do put_macro("keywords")
  copy_field("properties.cclom:general_keyword[]", "keywords[]")
end

# ---------------encoding----------------------------------
do put_macro("learningResourceType")
  unless exists("properties.ccm:wwwurl[].1")
    if exists("downloadUrl")
      set_array("encoding[]")
      add_field("encoding[].$append.type", "MediaObject")
      copy_field("downloadUrl", "encoding[].$last.contentUrl")
      copy_field("mimetype", "encoding[].$last.encodingFormat")
      copy_field("size", "encoding[].$last.contentSize")
    end
  end
end

# ---------------dateCreated----------------------------------
do put_macro("dateCreated")
  copy_field("properties.cm:document_createdISO8601[].1", "dateCreated")
end

# ---------------datePublished----------------------------------
do put_macro("datePublished")
  copy_field("properties.ccm:published_dateISO8601[].1", "datePublished")
end

