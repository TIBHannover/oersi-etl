/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
    id "jacoco"
    id "org.sonarqube" version "2.8"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'
    implementation 'org.jooq:joox-java-6:1.6.0'
    implementation 'org.metafacture:metafacture-plumbing:feature-oersi-SNAPSHOT'
    implementation 'org.metafacture:metafacture-runner:feature-oersi-SNAPSHOT'
    implementation 'org.metafacture:metafacture-json:feature-oersi-SNAPSHOT'
    implementation 'org.metafacture:metafacture-html:feature-oersi-SNAPSHOT'
    implementation 'org.metafacture:metafacture-elasticsearch:feature-oersi-SNAPSHOT'
    implementation 'org.metafacture:metafacture-xml:feature-oersi-SNAPSHOT'
    implementation 'org.metafacture.fix:org.metafacture.fix:1.0.0-SNAPSHOT'
    implementation('org.metafacture:metafacture-biblio:feature-oersi-SNAPSHOT') {
        exclude group: 'xml-apis', module: 'xml-apis'
    }
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.10.4'
    implementation 'com.networknt:json-schema-validator:1.0.40'

    // Test frameworks:
    testImplementation 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.+"
}

apply plugin : "java"
sourceCompatibility = JavaVersion.VERSION_11

ext {
   javaMainClass = "oersi.ETL"
}

application {
    mainClassName = javaMainClass
}

sonarqube {
  properties {
    property "sonar.projectKey", "oersi_oersi-etl"
    property "sonar.organization", "oersi"
  }
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}